{"ast":null,"code":"var _jsxFileName = \"/home/fikash/Dev/Temp-Projects/disco-2/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebAPI = new Spotify();\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: '',\n        topTracks: ''\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebAPI.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getTopTracks() {\n    spotifyWebAPI.getMyTopTracks().then(response => {\n      console.log(response);\n    });\n  }\n\n  getNowPlaying() {\n    spotifyWebAPI.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Login with Spotify\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Now Playing:  \", this.state.nowPlaying.name, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        width: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Check Now Playing\"), React.createElement(\"button\", {\n      onClick: () => this.getTopTracks(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Get Top Tracks\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fikash/Dev/Temp-Projects/disco-2/client/src/App.js"],"names":["React","Spotify","spotifyWebAPI","App","Component","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","topTracks","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getTopTracks","getMyTopTracks","then","response","console","log","getNowPlaying","getMyCurrentPlaybackState","setState","item","album","images","url","render","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebAPI = new Spotify()\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        image: '',\n        topTracks: ''\n      }\n    }\n    if (params.access_token) {\n      spotifyWebAPI.setAccessToken(params.access_token)\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getTopTracks() {\n    spotifyWebAPI.getMyTopTracks()\n      .then((response) => {\n        console.log(response)\n      })\n  }\n\n  getNowPlaying() {\n    spotifyWebAPI.getMyCurrentPlaybackState()\n      .then((response) => {\n        console.log(response)\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            image: response.item.album.images[0].url\n          }\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888'>\n          <button >Login with Spotify</button>\n        </a>\n        <div> Now Playing:  {this.state.nowPlaying.name} </div>\n        <div>\n          <img src={this.state.nowPlaying.image} style={{ width: 500 }} />\n        </div>\n        <button onClick={() => this.getNowPlaying()} >\n          Check Now Playing\n         </button>\n\n        <button onClick={() => this.getTopTracks()} >\n          Get Top Tracks\n         </button>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}